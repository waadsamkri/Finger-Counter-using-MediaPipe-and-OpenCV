import cv2
import mediapipe as mp

mp_hands = mp.solutions.hands
mp_drawing = mp.solutions.drawing_utils

hands = mp_hands.Hands(
    static_image_mode=False,
    max_num_hands=10,
    min_detection_confidence=0.7,
    min_tracking_confidence=0.7
)

cap = cv2.VideoCapture(0)

finger_tips_ids = [4, 8, 12, 16, 20]

while True:
    success, frame = cap.read()
    if not success:
        break

    frame = cv2.flip(frame, 1)
    rgb_frame = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB)

    result = hands.process(rgb_frame)

    total_fingers = 0
    right_hands = 0
    left_hands = 0

    if result.multi_hand_landmarks and result.multi_handedness:
        for hand_landmarks, hand_label in zip(result.multi_hand_landmarks, result.multi_handedness):
            label = hand_label.classification[0].label
            if label == 'Right':
                right_hands += 1
                hand_color = (255, 0, 0)
            else:
                left_hands += 1
                hand_color = (0, 255, 0)

            finger_count = 0
            landmarks = hand_landmarks.landmark
            h, w, _ = frame.shape

            if label == 'Right':
                if landmarks[4].x < landmarks[3].x:
                    finger_count += 1
            else:
                if landmarks[4].x > landmarks[3].x:
                    finger_count += 1

            for tip_id in [8, 12, 16, 20]:
                if landmarks[tip_id].y < landmarks[tip_id - 2].y:
                    finger_count += 1

            total_fingers += finger_count

            mp_drawing.draw_landmarks(
                frame,
                hand_landmarks,
                mp_hands.HAND_CONNECTIONS,
                mp_drawing.DrawingSpec(color=hand_color, thickness=2, circle_radius=4),
                mp_drawing.DrawingSpec(color=(255, 255, 255), thickness=2)
            )

            cx = int(landmarks[0].x * w)
            cy = int(landmarks[0].y * h)
            cv2.putText(frame, f'{label} - {finger_count} fingers', (cx - 60, cy - 20),
                        cv2.FONT_HERSHEY_SIMPLEX, 0.7, hand_color, 2)

    cv2.rectangle(frame, (0, 0), (350, 100), (0, 0, 0), -1)
    cv2.putText(frame, f'Total Fingers: {total_fingers}', (10, 30),
                cv2.FONT_HERSHEY_SIMPLEX, 0.8, (255, 255, 255), 2)
    cv2.putText(frame, f'Right Hands: {right_hands}', (10, 60),
                cv2.FONT_HERSHEY_SIMPLEX, 0.7, (255, 0, 0), 2)
    cv2.putText(frame, f'Left Hands: {left_hands}', (10, 90),
                cv2.FONT_HERSHEY_SIMPLEX, 0.7, (0, 255, 0), 2)

    cv2.imshow("Finger Counter", frame)

    if cv2.waitKey(1) & 0xFF == ord('q'):
        break

cap.release()
cv2.destroyAllWindows()
